{"version":3,"file":"editor-server.js","sources":["../log-view-machine/src/core/Tracing.ts","../log-view-machine/src/core/RobotCopy.ts","../log-view-machine/src/editor-server.ts"],"sourcesContent":["export interface MessageMetadata {\n  messageId: string;\n  traceId: string;\n  spanId: string;\n  timestamp: string;\n  backend: 'kotlin' | 'node';\n  action: string;\n  data?: any;\n}\n\nexport interface TraceInfo {\n  traceId: string;\n  messages: MessageMetadata[];\n  startTime?: string;\n  endTime?: string;\n  backend?: 'kotlin' | 'node';\n}\n\nexport class Tracing {\n  private messageHistory: Map<string, MessageMetadata> = new Map();\n  private traceMap: Map<string, string[]> = new Map();\n\n  generateMessageId(): string {\n    return `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  generateTraceId(): string {\n    return `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  generateSpanId(): string {\n    return `span_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  trackMessage(messageId: string, traceId: string, spanId: string, metadata: Partial<MessageMetadata>): MessageMetadata {\n    const message: MessageMetadata = {\n      messageId,\n      traceId,\n      spanId,\n      timestamp: new Date().toISOString(),\n      backend: metadata.backend || 'node',\n      action: metadata.action || 'unknown',\n      data: metadata.data,\n    };\n\n    this.messageHistory.set(messageId, message);\n\n    if (!this.traceMap.has(traceId)) {\n      this.traceMap.set(traceId, []);\n    }\n    this.traceMap.get(traceId)!.push(messageId);\n\n    return message;\n  }\n\n  getMessage(messageId: string): MessageMetadata | undefined {\n    return this.messageHistory.get(messageId);\n  }\n\n  getTraceMessages(traceId: string): MessageMetadata[] {\n    const messageIds = this.traceMap.get(traceId) || [];\n    return messageIds.map(id => this.messageHistory.get(id)).filter(Boolean) as MessageMetadata[];\n  }\n\n  getFullTrace(traceId: string): TraceInfo {\n    const messages = this.getTraceMessages(traceId);\n    return {\n      traceId,\n      messages,\n      startTime: messages[0]?.timestamp,\n      endTime: messages[messages.length - 1]?.timestamp,\n      backend: messages[0]?.backend,\n    };\n  }\n\n  getMessageHistory(): MessageMetadata[] {\n    return Array.from(this.messageHistory.values());\n  }\n\n  getTraceIds(): string[] {\n    return Array.from(this.traceMap.keys());\n  }\n\n  clearHistory(): void {\n    this.messageHistory.clear();\n    this.traceMap.clear();\n  }\n\n  // Create tracing headers for HTTP requests\n  createTracingHeaders(traceId: string, spanId: string, messageId: string, enableDataDog: boolean = false): Record<string, string> {\n    const headers: Record<string, string> = {\n      'x-trace-id': traceId,\n      'x-span-id': spanId,\n      'x-message-id': messageId,\n    };\n\n    if (enableDataDog) {\n      headers['x-datadog-trace-id'] = traceId;\n      headers['x-datadog-parent-id'] = spanId;\n      headers['x-datadog-sampling-priority'] = '1';\n    }\n\n    return headers;\n  }\n}\n\nexport function createTracing(): Tracing {\n  return new Tracing();\n} ","// ViewStateMachine import removed as it's not used\nimport { Tracing, createTracing, MessageMetadata } from './Tracing';\n\nexport interface RobotCopyConfig {\n  unleashUrl?: string;\n  unleashClientKey?: string;\n  unleashAppName?: string;\n  unleashEnvironment?: string;\n  kotlinBackendUrl?: string;\n  nodeBackendUrl?: string;\n  enableTracing?: boolean;\n  enableDataDog?: boolean;\n}\n\nexport class RobotCopy {\n  private config: RobotCopyConfig;\n  private tracing: Tracing;\n  private unleashToggles: Map<string, boolean> = new Map();\n  private machines: Map<string, { machine: any; config: any; registeredAt: string }> | undefined;\n\n  constructor(config: RobotCopyConfig = {}) {\n    this.config = {\n      unleashUrl: 'http://localhost:4242/api',\n      unleashClientKey: 'default:development.unleash-insecure-api-token',\n      unleashAppName: 'fish-burger-frontend',\n      unleashEnvironment: 'development',\n      kotlinBackendUrl: 'http://localhost:8080',\n      nodeBackendUrl: 'http://localhost:3001',\n      enableTracing: true,\n      enableDataDog: true,\n      ...config,\n    };\n\n    this.tracing = createTracing();\n    this.initializeUnleashToggles();\n  }\n\n  private async initializeUnleashToggles() {\n    // Simulate Unleash toggle initialization\n    // In real implementation, this would fetch from Unleash API\n    this.unleashToggles.set('fish-burger-kotlin-backend', false);\n    this.unleashToggles.set('fish-burger-node-backend', true);\n    this.unleashToggles.set('enable-tracing', true);\n    this.unleashToggles.set('enable-datadog', true);\n  }\n\n  async isEnabled(toggleName: string, _context: any = {}): Promise<boolean> {\n    return this.unleashToggles.get(toggleName) || false;\n  }\n\n  async getBackendUrl(): Promise<string> {\n    const useKotlin = await this.isEnabled('fish-burger-kotlin-backend');\n    return useKotlin ? this.config.kotlinBackendUrl! : this.config.nodeBackendUrl!;\n  }\n\n  async getBackendType(): Promise<'kotlin' | 'node'> {\n    const useKotlin = await this.isEnabled('fish-burger-kotlin-backend');\n    return useKotlin ? 'kotlin' : 'node';\n  }\n\n  generateMessageId(): string {\n    return this.tracing.generateMessageId();\n  }\n\n  generateTraceId(): string {\n    return this.tracing.generateTraceId();\n  }\n\n  generateSpanId(): string {\n    return this.tracing.generateSpanId();\n  }\n\n  trackMessage(messageId: string, traceId: string, spanId: string, metadata: Partial<MessageMetadata>): MessageMetadata {\n    return this.tracing.trackMessage(messageId, traceId, spanId, metadata);\n  }\n\n  getMessage(messageId: string): MessageMetadata | undefined {\n    return this.tracing.getMessage(messageId);\n  }\n\n  getTraceMessages(traceId: string): MessageMetadata[] {\n    return this.tracing.getTraceMessages(traceId);\n  }\n\n  getFullTrace(traceId: string) {\n    return this.tracing.getFullTrace(traceId);\n  }\n\n  async sendMessage(action: string, data: any = {}): Promise<any> {\n    const messageId = this.generateMessageId();\n    const traceId = this.generateTraceId();\n    const spanId = this.generateSpanId();\n    const backend = await this.getBackendType();\n    const backendUrl = await this.getBackendUrl();\n\n    // Track the message\n    this.trackMessage(messageId, traceId, spanId, {\n      backend,\n      action,\n      data,\n    });\n\n    // Prepare headers for tracing\n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json',\n      ...this.tracing.createTracingHeaders(traceId, spanId, messageId, await this.isEnabled('enable-datadog')),\n    };\n\n    try {\n      const response = await fetch(`${backendUrl}/api/fish-burger/${action}`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({\n          ...data,\n          messageId,\n          traceId,\n          spanId,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      \n      // Track the response\n      this.trackMessage(\n        `${messageId}_response`,\n        traceId,\n        spanId,\n        {\n          backend,\n          action: `${action}_response`,\n          data: result,\n        }\n      );\n\n      return result;\n    } catch (error) {\n      // Track the error\n      this.trackMessage(\n        `${messageId}_error`,\n        traceId,\n        spanId,\n        {\n          backend,\n          action: `${action}_error`,\n          data: { error: error instanceof Error ? error.message : String(error) },\n        }\n      );\n\n      throw error;\n    }\n  }\n\n  async startCooking(orderId: string, ingredients: string[]): Promise<any> {\n    return this.sendMessage('start', { orderId, ingredients });\n  }\n\n  async updateProgress(orderId: string, cookingTime: number, temperature: number): Promise<any> {\n    return this.sendMessage('progress', { orderId, cookingTime, temperature });\n  }\n\n  async completeCooking(orderId: string): Promise<any> {\n    return this.sendMessage('complete', { orderId });\n  }\n\n  // Integration with ViewStateMachine\n  integrateWithViewStateMachine(viewStateMachine: any): RobotCopy {\n    // Register message handlers for ViewStateMachine\n    viewStateMachine.registerRobotCopyHandler('START_COOKING', async (message: any) => {\n      return this.startCooking(message.orderId, message.ingredients);\n    });\n\n    viewStateMachine.registerRobotCopyHandler('UPDATE_PROGRESS', async (message: any) => {\n      return this.updateProgress(message.orderId, message.cookingTime, message.temperature);\n    });\n\n    viewStateMachine.registerRobotCopyHandler('COMPLETE_COOKING', async (message: any) => {\n      return this.completeCooking(message.orderId);\n    });\n\n    return this;\n  }\n\n  async getTrace(traceId: string): Promise<any> {\n    const backendUrl = await this.getBackendUrl();\n\n    try {\n      const response = await fetch(`${backendUrl}/api/trace/${traceId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(`Failed to get trace ${traceId}:`, error);\n      return this.getFullTrace(traceId);\n    }\n  }\n\n  async getMessageFromBackend(messageId: string): Promise<any> {\n    const backendUrl = await this.getBackendUrl();\n\n    try {\n      const response = await fetch(`${backendUrl}/api/message/${messageId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(`Failed to get message ${messageId}:`, error);\n      return this.getMessage(messageId);\n    }\n  }\n\n\n\n  // Debugging and monitoring methods\n  getMessageHistory(): MessageMetadata[] {\n    return this.tracing.getMessageHistory();\n  }\n\n  getTraceIds(): string[] {\n    return this.tracing.getTraceIds();\n  }\n\n  clearHistory(): void {\n    this.tracing.clearHistory();\n  }\n\n  // Configuration methods\n  updateConfig(newConfig: Partial<RobotCopyConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n  }\n\n  getConfig(): RobotCopyConfig {\n    return { ...this.config };\n  }\n\n  // Response handling\n  onResponse(channel: string, _handler: (response: any) => void): void {\n    // This would be implemented to handle incoming responses\n    // For now, we'll just store the handler for future use\n    console.log(`Registered response handler for channel: ${channel}`);\n  }\n\n  // Machine registration for state machines\n  registerMachine(name: string, machine: any, config: any = {}): void {\n    console.log(`Registering machine: ${name}`, { config });\n    // Store the machine registration for future use\n    // This could be used for machine discovery, monitoring, etc.\n    if (!this.machines) {\n      this.machines = new Map();\n    }\n    this.machines.set(name, { machine, config, registeredAt: new Date().toISOString() });\n  }\n\n  // Get registered machines\n  getRegisteredMachines(): Map<string, any> {\n    return this.machines || new Map();\n  }\n\n  // Get a specific registered machine\n  getRegisteredMachine(name: string): any {\n    return this.machines?.get(name);\n  }\n}\n\nexport function createRobotCopy(config?: RobotCopyConfig): RobotCopy {\n  return new RobotCopy(config);\n} ","import express from 'express';\nimport cors from 'cors';\nimport helmet from 'helmet';\nimport { RobotCopy } from './core/RobotCopy';\n\n// Editor-specific configuration\nconst EDITOR_CONFIG = {\n  port: process.env.EDITOR_PORT || 3003,\n  enableCors: true,\n  enableSecurity: true\n};\n\n// Initialize RobotCopy with editor-specific features\nconst robotCopy = new RobotCopy({\n  unleashUrl: process.env.UNLEASH_URL || 'http://localhost:4242/api',\n  unleashAppName: process.env.UNLEASH_APP_NAME || 'tome-connector-editor',\n  unleashEnvironment: process.env.UNLEASH_ENVIRONMENT || 'development'\n});\n\n// Create Express app\nconst app = express();\n\n// Security middleware\nif (EDITOR_CONFIG.enableSecurity) {\n  app.use(helmet({\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n        scriptSrc: [\"'self'\", \"'unsafe-eval'\"],\n        imgSrc: [\"'self'\", \"data:\", \"https:\"],\n        connectSrc: [\"'self'\", \"ws:\", \"wss:\"]\n      }\n    }\n  }));\n}\n\n// CORS middleware\nif (EDITOR_CONFIG.enableCors) {\n  app.use(cors({\n    origin: process.env.ALLOWED_ORIGINS?.split(',') || ['http://localhost:3000', 'http://localhost:3001'],\n    credentials: true,\n    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With']\n  }));\n}\n\n// Body parsing middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true, limit: '10mb' }));\n\n// Health check endpoint\napp.get('/health', (req, res) => {\n  res.json({\n    status: 'healthy',\n    service: 'tome-connector-editor',\n    timestamp: new Date().toISOString(),\n    uptime: process.uptime(),\n    version: process.env.npm_package_version || '1.0.0'\n  });\n});\n\n// Editor-specific API endpoints\napp.get('/api/editor/status', (req, res) => {\n  res.json({\n    status: 'ready',\n    service: 'tome-connector-editor',\n    robotCopy: {\n      unleashUrl: robotCopy['config'].unleashUrl,\n      unleashAppName: robotCopy['config'].unleashAppName,\n      unleashEnvironment: robotCopy['config'].unleashEnvironment\n    }\n  });\n});\n\n// Pact-related endpoints (using actual RobotCopy methods)\napp.get('/api/pact/features', async (req, res) => {\n  try {\n    // Get available feature toggles\n    const features = {\n      'fish-burger-kotlin-backend': await robotCopy.isEnabled('fish-burger-kotlin-backend'),\n      'fish-burger-node-backend': await robotCopy.isEnabled('fish-burger-node-backend'),\n      'enable-tracing': await robotCopy.isEnabled('enable-tracing'),\n      'enable-datadog': await robotCopy.isEnabled('enable-datadog')\n    };\n    \n    res.json({ features });\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to retrieve feature toggles' });\n  }\n});\n\napp.get('/api/pact/backend', async (req, res) => {\n  try {\n    const backendType = await robotCopy.getBackendType();\n    const backendUrl = await robotCopy.getBackendUrl();\n    \n    res.json({ \n      backendType, \n      backendUrl,\n      features: {\n        'fish-burger-kotlin-backend': await robotCopy.isEnabled('fish-burger-kotlin-backend'),\n        'fish-burger-node-backend': await robotCopy.isEnabled('fish-burger-node-backend')\n      }\n    });\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to retrieve backend information' });\n  }\n});\n\n// Tracing endpoints\napp.get('/api/tracing/status', (req, res) => {\n  res.json({\n    tracing: {\n      enabled: robotCopy['config'].enableTracing,\n      datadog: robotCopy['config'].enableDataDog\n    }\n  });\n});\n\napp.post('/api/tracing/message', async (req, res) => {\n  try {\n    const { action, data } = req.body;\n    \n    if (!action) {\n      return res.status(400).json({ error: 'action parameter is required' });\n    }\n    \n    const result = await robotCopy.sendMessage(action, data);\n    res.json({ success: true, result });\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to send message' });\n  }\n});\n\napp.get('/api/tracing/message/:messageId', (req, res) => {\n  try {\n    const { messageId } = req.params;\n    const message = robotCopy.getMessage(messageId);\n    \n    if (message) {\n      res.json({ message });\n    } else {\n      res.status(404).json({ error: 'Message not found' });\n    }\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to retrieve message' });\n  }\n});\n\napp.get('/api/tracing/trace/:traceId', (req, res) => {\n  try {\n    const { traceId } = req.params;\n    const messages = robotCopy.getTraceMessages(traceId);\n    const fullTrace = robotCopy.getFullTrace(traceId);\n    \n    res.json({ \n      traceId, \n      messageCount: messages.length,\n      messages,\n      fullTrace\n    });\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to retrieve trace' });\n  }\n});\n\n// Generate new IDs\napp.get('/api/tracing/generate', (req, res) => {\n  try {\n    const messageId = robotCopy.generateMessageId();\n    const traceId = robotCopy.generateTraceId();\n    const spanId = robotCopy.generateSpanId();\n    \n    res.json({ messageId, traceId, spanId });\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to generate IDs' });\n  }\n});\n\n// Error handling middleware\napp.use((error: any, req: express.Request, res: express.Response, next: express.NextFunction) => {\n  console.error('Editor server error:', error);\n  \n  res.status(500).json({\n    error: 'Internal server error',\n    message: process.env.NODE_ENV === 'development' ? error.message : 'Something went wrong'\n  });\n});\n\n// 404 handler\napp.use('*', (req, res) => {\n  res.status(404).json({\n    error: 'Endpoint not found',\n    path: req.originalUrl,\n    availableEndpoints: [\n      'GET /health',\n      'GET /api/editor/status',\n      'GET /api/pact/features',\n      'GET /api/pact/backend',\n      'GET /api/tracing/status',\n      'POST /api/tracing/message',\n      'GET /api/tracing/message/:messageId',\n      'GET /api/tracing/trace/:traceId',\n      'GET /api/tracing/generate'\n    ]\n  });\n});\n\n// Start server\nasync function startServer() {\n  try {\n    // Start listening\n    app.listen(EDITOR_CONFIG.port, () => {\n      console.log(`🚀 TomeConnector Editor Server running on port ${EDITOR_CONFIG.port}`);\n      console.log(`🔍 Health check at http://localhost:${EDITOR_CONFIG.port}/health`);\n      console.log(`🎛️  Editor status at http://localhost:${EDITOR_CONFIG.port}/api/editor/status`);\n      console.log(`⚙️  Pact features at http://localhost:${EDITOR_CONFIG.port}/api/pact/features`);\n      console.log(`🔍 Tracing at http://localhost:${EDITOR_CONFIG.port}/api/tracing/status`);\n    });\n  } catch (error) {\n    console.error('Failed to start editor server:', error);\n    process.exit(1);\n  }\n}\n\n// Export for testing\nexport { app, startServer, robotCopy };\n\n// Start server if this file is run directly\nif (import.meta.url === `file://${process.argv[1]}`) {\n  startServer();\n}\n"],"names":[],"mappings":"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"}