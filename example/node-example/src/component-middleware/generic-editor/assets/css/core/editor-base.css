/**
 * Generic Editor Base CSS
 * Fundamental styling for the generic editor
 */

/* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    min-height: 100vh;
    color: #333;
}

.container {
    display: flex;
    flex-direction: column;
    height: 100vh;
    background: #ddd;
    position: relative;
}

/* Desktop/Tablet Layout */
@media (min-width: 769px) {
    .container {
        display: grid;
        grid-template-columns: 300px 1fr 400px;
        grid-template-rows: auto 1fr;
        gap: 1px;
    }

    .canvas-container {
        grid-column: 2;
        grid-row: 2;
    }

    .panels-container {
        display: none; /* Hide stacked panels on desktop */
    }

    /* Show original sidebar and right panel */
    .sidebar {
        grid-column: 1;
        grid-row: 2;
        display: inline-block;
        flex-direction: column;
        overflow-y: auto;
        max-height: 100vh;
    }

    .right-panel {
        grid-column: 3;
        grid-row: 2;
        display: flex;
        flex-direction: column;
    }
}

/* Mobile Layout */
@media (max-width: 768px) {
    .sidebar, .right-panel {
        display: none; /* Hide original layout on mobile */
    }

    .panels-container {
        display: flex;
    }

    .desktop-only {
        display: none; /* Hide desktop-only sections on mobile */
    }

    .mobile-only {
        display: block; /* Show mobile-only sections */
    }
}

/* Desktop Layout */
@media (min-width: 769px) {
    .mobile-only {
        display: none !important; /* Hide mobile-only sections on desktop */
    }

    .desktop-only {
        display: block; /* Show desktop-only sections */
    }
}

/* Canvas takes full screen height */
.canvas-container {
    background: #f8f9fa;
    border: 2px dashed #dee2e6;
    border-radius: 8px;
    margin: 10px;
    position: relative;
    overflow: hidden;
    min-height: 400px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
}

.canvas-container:hover {
    border-color: #007bff;
    box-shadow: 0 0 20px rgba(0, 123, 255, 0.1);
}

.canvas-container.dragging {
    border-color: #28a745;
    background: #f8fff9;
}

.canvas-container.zooming {
    border-color: #ffc107;
    background: #fffef8;
}

/* Canvas content */
.canvas-content {
    width: 100%;
    height: 100%;
    position: relative;
    transform-origin: center center;
    transition: transform 0.1s ease;
}

/* Canvas grabber */
.canvas-grabber {
    position: absolute;
    top: 10px;
    right: 10px;
    background: rgba(0, 123, 255, 0.9);
    color: white;
    padding: 8px 12px;
    border-radius: 20px;
    font-size: 12px;
    cursor: grab;
    user-select: none;
    z-index: 1000;
    transition: all 0.2s ease;
}

/* Canvas transform consistency */
.canvas-container {
    --canvas-transform: translate(0px, 0px) scale(1);
}

.sun-editor-wrapper {
    transform-origin: center center;
    will-change: transform;
}

.canvas-grabber:hover {
    background: rgba(0, 123, 255, 1);
    transform: scale(1.05);
}

.canvas-grabber:active {
    cursor: grabbing;
    transform: scale(0.95);
}

.canvas-grabber.active {
    background: rgba(40, 167, 69, 0.9);
    animation: pulse 1s infinite;
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

/* Canvas controls */
.canvas-controls {
    position: absolute;
    bottom: 10px;
    right: 10px;
    display: flex;
    gap: 8px;
    z-index: 1000;
}

.canvas-control {
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid #dee2e6;
    border-radius: 4px;
    padding: 6px 10px;
    font-size: 12px;
    cursor: pointer;
    transition: all 0.2s ease;
}

.canvas-control:hover {
    background: rgba(255, 255, 255, 1);
    border-color: #007bff;
}

.canvas-control.active {
    background: #007bff;
    color: white;
    border-color: #007bff;
}

/* Gesture indicator */
.gesture-indicator {
    position: absolute;
    top: 10px;
    left: 10px;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 6px 10px;
    border-radius: 4px;
    font-size: 11px;
    font-family: monospace;
    z-index: 1000;
}

/* Status indicators */
.status-indicator {
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 500;
}

.status-success {
    background: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
}

.status-error {
    background: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
}

.status-info {
    background: #d1ecf1;
    color: #0c5460;
    border: 1px solid #bee5eb;
}

.status-warning {
    background: #fff3cd;
    color: #856404;
    border: 1px solid #ffeaa7;
}

/* Utility classes */
.hidden {
    display: none !important;
}

.visible {
    display: block !important;
}

.fade-in {
    animation: fadeIn 0.3s ease-in;
}

.fade-out {
    animation: fadeOut 0.3s ease-out;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
}

/* Loading states */
.loading {
    position: relative;
    pointer-events: none;
}

.loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    margin: -10px 0 0 -10px;
    border: 2px solid #f3f3f3;
    border-top: 2px solid #007bff;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Focus states */
.focus-visible:focus {
    outline: 2px solid #007bff;
    outline-offset: 2px;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
    .canvas-container {
        border-width: 3px;
    }
    
    .canvas-grabber {
        border: 2px solid white;
    }
    
    .status-indicator {
        border-width: 2px;
    }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
    .canvas-content,
    .canvas-grabber,
    .canvas-control,
    .fade-in,
    .fade-out {
        transition: none;
        animation: none;
    }
}
